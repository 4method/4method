<section id="contact" class="py-20 gradient-bg">
  <div class="max-w-4xl mx-auto px-6 text-center">
    <h2 class="text-3xl md:text-4xl font-bold mb-6">
      ¿Tienes un proyecto en mente?
    </h2>
    <p class="text-xl mb-8 leading-relaxed">
      Hablemos sobre cómo podemos ayudarte mientras construimos herramientas
      para la comunidad
    </p>

    <div class="bg-white p-6 rounded-lg shadow-md mt-10 mb-8 max-w-lg mx-auto">
      <form id="contactForm" class="space-y-4 text-left">
        <div class="form-group">
          <label for="name" class="block mb-1 font-medium text-petroleum"
            >Nombre:</label
          >
          <input
            type="text"
            id="name"
            name="name"
            class="w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-petroleum"
          />
          <span id="nameError" class="text-red-500 text-sm hidden"
            >Por favor ingresa tu nombre</span
          >
        </div>

        <div class="form-group">
          <label for="email" class="block mb-1 font-medium text-petroleum"
            >Email:</label
          >
          <input
            type="email"
            id="email"
            name="email"
            class="w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-petroleum"
          />
          <span id="emailError" class="text-red-500 text-sm hidden"
            >Por favor ingresa un email válido</span
          >
        </div>

        <div class="form-group">
          <label for="message" class="block mb-1 font-medium text-petroleum"
            >Mensaje:</label
          >
          <textarea
            id="message"
            name="message"
            rows="4"
            class="w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-petroleum"
          ></textarea>
          <span id="messageError" class="text-red-500 text-sm hidden"
            >Por favor ingresa un mensaje</span
          >
        </div>

        <div class="text-center">
          <button
            type="submit"
            id="submitBtn"
            class="bg-petroleum text-white hover:bg-dark-petroleum rounded-lg transition-all hover-lift px-8 py-3 font-medium"
          >
            Enviar Mensaje
          </button>
        </div>
      </form>

      <div
        id="successMessage"
        class="hidden mt-4 p-3 bg-green-100 text-green-700 rounded-lg"
      >
        Tu mensaje ha sido enviado correctamente. ¡Gracias por contactarnos!
      </div>

      <div
        id="errorMessage"
        class="hidden mt-4 p-3 bg-red-100 text-red-700 rounded-lg"
      >
        Ha ocurrido un error al enviar el mensaje. Por favor intenta nuevamente.
      </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.getElementById("contactForm") as HTMLFormElement;
    const nameInput = document.getElementById("name") as HTMLInputElement;
    const emailInput = document.getElementById("email") as HTMLInputElement;
    const messageInput = document.getElementById("message") as HTMLInputElement;
    const nameError = document.getElementById("nameError")!;
    const emailError = document.getElementById("emailError")!;
    const messageError = document.getElementById("messageError")!;
    const successMessage = document.getElementById("successMessage")!;
    const errorMessage = document.getElementById("errorMessage")!;

    const validateEmail = (email: string) => {
      return /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email);
    };

    const showError = (input: HTMLElement, errorElement: HTMLElement) => {
      input.classList.add("border-red-500");
      errorElement.classList.remove("hidden");
    };

    const hideError = (input: HTMLElement, errorElement: HTMLElement) => {
      input.classList.remove("border-red-500");
      errorElement.classList.add("hidden");
    };

    // Validation on input
    nameInput.addEventListener("input", () => {
      if (nameInput.value.trim() !== "") {
        hideError(nameInput, nameError);
      }
    });

    emailInput.addEventListener("input", () => {
      if (validateEmail(emailInput.value.trim())) {
        hideError(emailInput, emailError);
      }
    });

    messageInput.addEventListener("input", () => {
      if (messageInput.value.trim() !== "") {
        hideError(messageInput, messageError);
      }
    });

    form.addEventListener("submit", async (e) => {
      e.preventDefault();
      let isValid = true;

      // Validate name
      if (nameInput.value.trim() === "") {
        showError(nameInput, nameError);
        isValid = false;
      } else {
        hideError(nameInput, nameError);
      }

      // Validate email
      if (!validateEmail(emailInput.value.trim())) {
        showError(emailInput, emailError);
        isValid = false;
      } else {
        hideError(emailInput, emailError);
      }

      // Validate message
      if (messageInput.value.trim() === "") {
        showError(messageInput, messageError);
        isValid = false;
      } else {
        hideError(messageInput, messageError);
      }

      if (isValid) {
        try {
          const submitBtn = document.getElementById(
            "submitBtn"
          ) as HTMLButtonElement;
          submitBtn.disabled = true;
          submitBtn.textContent = "Enviando...";

          // Use Formspree API
          const response = await fetch("https://formspree.io/f/xldloebz", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
              Accept: "application/json",
            },
            body: JSON.stringify({
              name: nameInput.value.trim(),
              email: emailInput.value.trim(),
              message: messageInput.value.trim(),
            }),
          });

          const result = await response.json();

          if (response.ok) {
            // Success
            form.reset();
            successMessage.classList.remove("hidden");
            errorMessage.classList.add("hidden");
            // Hide success message after 5 seconds
            setTimeout(() => {
              successMessage.classList.add("hidden");
            }, 5000);
          } else {
            // Error
            throw new Error(result.error || "Error al enviar el formulario");
          }
        } catch (error) {
          console.error("Error:", error);
          errorMessage.classList.remove("hidden");
          successMessage.classList.add("hidden");
          // Hide error message after 5 seconds
          setTimeout(() => {
            errorMessage.classList.add("hidden");
          }, 5000);
        } finally {
          const submitBtn = document.getElementById(
            "submitBtn"
          ) as HTMLButtonElement;
          submitBtn.disabled = false;
          submitBtn.textContent = "Enviar Mensaje";
        }
      }
    });
  });
</script>
