---
import "../styles/global.css";
---

<!doctype html>
<html lang="es" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>4method - Herramientas para Desarrolladores</title>

    <style>
      .gradient-bg {
        background: linear-gradient(135deg, #1e3a8a 0%, #1e40af 100%);
      }
      .code-pattern {
        background-image: radial-gradient(
            circle at 25px 25px,
            rgba(135, 206, 235, 0.1) 2px,
            transparent 0
          ),
          radial-gradient(
            circle at 75px 75px,
            rgba(135, 206, 235, 0.05) 2px,
            transparent 0
          );
        background-size: 100px 100px;
      }
      .hover-lift {
        transition:
          transform 0.3s ease,
          box-shadow 0.3s ease;
      }
      .hover-lift:hover {
        transform: translateY(-5px);
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
      }

      /* Mobile menu icon styles */
      .menu-icon {
        transition: opacity 0.2s ease;
      }

      .menu-icon.hidden {
        opacity: 0;
      }

      .mobile-menu {
        max-height: 0;
        opacity: 0;
        overflow: hidden;
        transition: all 0.3s ease-in-out;
      }

      .mobile-menu.open {
        max-height: 300px;
        opacity: 1;
      }
    </style>
  </head>
  <body class="bg-white text-gray-900 font-sans antialiased">
    <slot />

    <script>
      // Improved mobile menu functionality
      const mobileMenuButton = document.getElementById(
        "mobile-menu-button"
      ) as HTMLButtonElement | null;
      const mobileMenu = document.getElementById(
        "mobile-menu"
      ) as HTMLDivElement | null;
      const hamburgerIcon = document.getElementById(
        "hamburger-icon"
      ) as SVGSVGElement | null;
      const closeIcon = document.getElementById(
        "close-icon"
      ) as SVGSVGElement | null;
      let isMenuOpen = false;

      function toggleMenu() {
        isMenuOpen = !isMenuOpen;

        if (mobileMenu && hamburgerIcon && closeIcon) {
          if (isMenuOpen) {
            // Show close icon, hide hamburger
            hamburgerIcon.classList.add("hidden");
            closeIcon.classList.remove("hidden");
            mobileMenu.classList.add("open");
            // Prevent body scroll when menu is open
            document.body.style.overflow = "hidden";
          } else {
            // Show hamburger icon, hide close
            hamburgerIcon.classList.remove("hidden");
            closeIcon.classList.add("hidden");
            mobileMenu.classList.remove("open");
            // Restore body scroll
            document.body.style.overflow = "";
          }
        }
      }

      function closeMenu() {
        if (isMenuOpen && mobileMenu && hamburgerIcon && closeIcon) {
          isMenuOpen = false;
          hamburgerIcon.classList.remove("hidden");
          closeIcon.classList.add("hidden");
          mobileMenu.classList.remove("open");
          document.body.style.overflow = "";
        }
      }

      // Toggle menu on button click
      mobileMenuButton?.addEventListener("click", (e) => {
        e.stopPropagation();
        toggleMenu();
      });

      // Close menu when clicking on navigation links
      mobileMenu?.querySelectorAll("a").forEach((link) => {
        link.addEventListener("click", closeMenu);
      });

      // Close menu when clicking outside
      document.addEventListener("click", (e) => {
        if (
          isMenuOpen &&
          mobileMenu &&
          mobileMenuButton &&
          !mobileMenu.contains(e.target as Node) &&
          !mobileMenuButton.contains(e.target as Node)
        ) {
          closeMenu();
        }
      });

      // Close menu on escape key
      document.addEventListener("keydown", (e) => {
        if (e.key === "Escape" && isMenuOpen) {
          closeMenu();
        }
      });

      // Handle window resize - close menu if switching to desktop
      window.addEventListener("resize", () => {
        if (window.innerWidth >= 768 && isMenuOpen) {
          closeMenu();
        }
      });

      // Smooth scrolling for anchor links
      document.querySelectorAll('a[href^="#"]').forEach((anchor) => {
        anchor.addEventListener("click", function (this: HTMLAnchorElement, e) {
          e.preventDefault();
          const target = document.querySelector(
            this.getAttribute("href") || ""
          );
          if (target) {
            target.scrollIntoView({
              behavior: "smooth",
              block: "start",
            });
          }
        });
      });

      // Subtle parallax effect on hero
      let ticking = false;
      function updateParallax() {
        const scrolled = window.pageYOffset;
        const hero = document.querySelector(
          ".code-pattern"
        ) as HTMLElement | null;
        if (hero) {
          hero.style.transform = `translateY(${scrolled * 0.2}px)`;
        }
        ticking = false;
      }

      function requestTick() {
        if (!ticking) {
          requestAnimationFrame(updateParallax);
          ticking = true;
        }
      }

      window.addEventListener("scroll", requestTick);
    </script>
  </body>
</html>
